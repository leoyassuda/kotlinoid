plugins {
    id "org.jetbrains.kotlin.jvm" version "1.4.31"
    id "io.qameta.allure" version "2.8.1"
}

group "com.ly"
version "1.0-SNAPSHOT"

repositories {
    jcenter()
    mavenCentral()
}

ext {
    allureVersion = "2.14.0"
}


dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1-jre")

    implementation("com.codeborne:selenide:5.22.1")

    implementation("io.qameta.allure:allure-selenide:${allureVersion}")

    testImplementation("io.qameta.allure:allure-gradle:2.5")

    testImplementation("org.junit.jupiter:junit-jupiter:5.7.2")

}

test {
    useJUnitPlatform()

    systemProperties = [
            // Set default browser
            "selenide.browser"                                     : "firefox",
            // Allure configs
            "allure.results.directory"                             : "build/allure-results",
            // Configuration parameters to execute top-level classes in parallel but methods in same thread
            'junit.jupiter.execution.parallel.enabled'             : 'true',
            'junit.jupiter.execution.parallel.mode.default'        : 'same_thread',
            'junit.jupiter.execution.parallel.mode.classes.default': 'concurrent',
    ]
}

allure {
    autoconfigure = true
    version = '2.8.1'
    downloadLink = 'http://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.8.1/allure-commandline-2.8.1.zip'

    useJUnit5 {
        version = "2.8.1"
    }
}

